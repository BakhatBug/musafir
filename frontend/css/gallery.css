@import 'common.css';

/* Page Header */
.page-header {
    position: relative;
    height: 40vh;
    background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('../images/gallery-header.jpg');
    background-size: cover;
    background-position: center;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    color: var(--light-text);
}

.page-header h1 {
    font-size: 3rem;
    margin-bottom: var(--spacing-md);
    animation: fadeIn 1s ease-in;
}

.page-header p {
    font-size: 1.2rem;
    max-width: 600px;
    margin: 0 auto;
    animation: fadeIn 1s ease-in 0.3s;
    opacity: 0;
    animation-fill-mode: forwards;
}

/* Gallery Filters */
.gallery-filters {
    background-color: var(--gray-light);
    padding: var(--spacing-lg) 0;
    text-align: center;
}

.filter-buttons {
    display: flex;
    justify-content: center;
    gap: var(--spacing-md);
    flex-wrap: wrap;
}

.filter-btn {
    padding: var(--spacing-sm) var(--spacing-lg);
    border: none;
    background: none;
    color: var(--gray);
    font-size: 1rem;
    cursor: pointer;
    transition: var(--transition-base);
    border-radius: var(--border-radius-sm);
}

.filter-btn:hover,
.filter-btn.active {
    color: var(--primary-color);
    background-color: rgba(var(--primary-rgb), 0.1);
}

/* Gallery Grid */
.gallery-grid {
    padding: 5rem 0;
    background-color: #fff;
}

.gallery-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: 2.5rem;
    padding: 0 2rem;
}

.gallery-item {
    position: relative;
    overflow: hidden;
    border-radius: 18px;
    box-shadow: 0 4px 24px rgba(44, 62, 80, 0.10);
    cursor: pointer;
    transition: transform 0.3s, box-shadow 0.3s;
    background: #f9f9f9;
    min-height: 320px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.gallery-item:hover {
    transform: translateY(-8px) scale(1.03);
    box-shadow: 0 8px 32px rgba(44, 62, 80, 0.18);
}

.gallery-item img {
    width: 100%;
    height: 320px;
    object-fit: cover;
    border-radius: 18px;
    transition: filter 0.3s;
}

.gallery-item:hover img {
    filter: brightness(0.85) blur(1px);
}

.gallery-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    top: 0;
    background: linear-gradient(transparent, rgba(44, 62, 80, 0.85));
    color: #fff;
    opacity: 1;
    transition: opacity 0.3s;
    border-radius: 0 0 18px 18px;
    pointer-events: none;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    z-index: 2;
    padding: 2rem 1.5rem 1.5rem 1.5rem;
}

.gallery-item:hover .gallery-overlay {
    opacity: 1;
}

.gallery-overlay h3 {
    margin-bottom: 0.5rem;
    font-size: 1.3rem;
    font-weight: 700;
    letter-spacing: 0.5px;
}

.gallery-overlay p {
    font-size: 1rem;
    opacity: 0.95;
}

/* Lightbox */
.lightbox {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.9);
    z-index: 9998;
    opacity: 0;
    transition: var(--transition-base);
}

.lightbox.active {
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 1;
}

.lightbox-content {
    position: relative;
    max-width: 90%;
    max-height: 90vh;
}

.lightbox-content img {
    max-width: 100%;
    max-height: 90vh;
    object-fit: contain;
}

.lightbox-caption {
    position: absolute;
    bottom: -50px;
    left: 0;
    right: 0;
    text-align: center;
    color: var(--light-text);
    padding: var(--spacing-md);
}

.lightbox-nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 100%;
    display: flex;
    justify-content: space-between;
    padding: 0 var(--spacing-xl);
}

.lightbox-nav button {
    background: none;
    border: none;
    color: var(--light-text);
    font-size: 2rem;
    cursor: pointer;
    padding: var(--spacing-md);
    transition: var(--transition-base);
}

.lightbox-nav button:hover {
    color: var(--primary-color);
}

.lightbox-close {
    position: absolute;
    top: var(--spacing-xl);
    right: var(--spacing-xl);
    background: none;
    border: none;
    color: var(--light-text);
    font-size: 2rem;
    cursor: pointer;
    transition: var(--transition-base);
}

.lightbox-close:hover {
    color: var(--primary-color);
}

/* Responsive Design */
@media (max-width: 768px) {
    .page-header {
        height: 30vh;
    }

    .page-header h1 {
        font-size: 2rem;
    }

    .gallery-container {
        grid-template-columns: 1fr;
        gap: 1.2rem;
        padding: 0 0.5rem;
    }

    .gallery-item img {
        height: 200px;
    }

    .lightbox-nav {
        padding: 0 var(--spacing-md);
    }

    .lightbox-nav button {
        font-size: 1.5rem;
    }

    .lightbox-close {
        top: var(--spacing-md);
        right: var(--spacing-md);
        font-size: 1.5rem;
    }
}

.gallery-masonry {
    padding: 5rem 0;
    background: #fff;
}

.gallery-masonry-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: 2.5rem;
    padding: 0 2rem;
}

.gallery-masonry-item {
    position: relative;
    overflow: hidden;
    border-radius: 18px;
    box-shadow: 0 4px 24px rgba(44, 62, 80, 0.10);
    cursor: pointer;
    background: #f9f9f9;
    min-height: 320px;
    display: flex;
    align-items: flex-end;
    justify-content: center;
    transition: transform 0.3s, box-shadow 0.3s;
}

.gallery-masonry-item img {
    width: 100%;
    height: 320px;
    object-fit: cover;
    border-radius: 18px;
    transition: filter 0.3s, transform 0.3s;
}

.gallery-masonry-item:hover img {
    filter: brightness(0.85) blur(1px);
    transform: scale(1.05);
}

.caption {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    background: linear-gradient(transparent, rgba(44, 62, 80, 0.85));
    color: #fff;
    font-size: 1.3rem;
    font-weight: 700;
    letter-spacing: 0.5px;
    text-align: center;
    padding: 1.2rem 0.5rem 1.5rem 0.5rem;
    border-radius: 0 0 18px 18px;
    opacity: 1;
    transition: opacity 0.3s;
    z-index: 2;
    pointer-events: none;
}

.gallery-masonry-item:hover .caption {
    opacity: 1;
}

@media (max-width: 768px) {
    .gallery-masonry-grid {
        grid-template-columns: 1fr;
        gap: 1.2rem;
        padding: 0 0.5rem;
    }
    .gallery-masonry-item img {
        height: 200px;
    }
    .caption {
        font-size: 1.1rem;
        padding: 0.7rem 0.2rem 1rem 0.2rem;
    }
}

.hero-header {
    position: relative;
    height: 60vh;
    background: url('../images/naran.jpg') no-repeat center center;
    background-size: cover;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    color: #fff;
    margin-top: 80px;
    overflow: hidden;
}

.hero-header .hero-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.7));
    z-index: 1;
}

.hero-header .hero-content {
    position: relative;
    z-index: 2;
    width: 100%;
    max-width: 800px;
    margin: 0 auto;
    padding: 0 20px;
}

.hero-header h1 {
    font-size: 3rem;
    margin-bottom: 1rem;
}

.hero-header p {
    font-size: 1.2rem;
    margin-bottom: 0;
}

.gallery-quote {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    font-size: 1.4rem;
    font-weight: 600;
    color: var(--primary-color);
    margin: 2.5rem 0 2rem 0;
    letter-spacing: 0.5px;
    text-align: center;
    gap: 1rem;
}

.gallery-quote i {
    font-size: 2.5rem;
    color: var(--secondary-color);
    margin-bottom: 0.5rem;
}

.gallery-quote span {
    font-size: 1.5rem;
    color: var(--primary-color);
    font-weight: 400;
}

.gallery-quote .fa-mountain {
    color: var(--secondary-color) !important;
}

.nav-links a.active, .nav-links a.active:visited, .nav-links a.active:focus {
    color: var(--secondary-color) !important;
}

a:hover, .footer-section a:hover {
    color: var(--secondary-color) !important;
} 